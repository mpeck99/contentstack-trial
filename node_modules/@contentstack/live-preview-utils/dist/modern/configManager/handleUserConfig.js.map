{"version":3,"sources":["../../../src/configManager/handleUserConfig.ts"],"sourcesContent":["import {\n    type IClientUrlParams,\n    type IInitData,\n    ILivePreviewModeConfig,\n    type IStackSdk,\n} from \"../types/types\";\nimport Config from \"./configManager\";\n\nconst handleClientUrlParams = (userConfig: Partial<IClientUrlParams>): void => {\n    const config = Config.get();\n    const clientUrlParams = config.clientUrlParams;\n\n    Config.set(\n        \"clientUrlParams.host\",\n        userConfig.host ?? config.clientUrlParams.host\n    );\n\n    Config.set(\n        \"clientUrlParams.protocol\",\n        userConfig.protocol ?? clientUrlParams.protocol\n    );\n    Config.set(\"clientUrlParams.port\", userConfig.port ?? clientUrlParams.port);\n\n    if (userConfig.protocol !== undefined && userConfig.port === undefined) {\n        switch (userConfig.protocol) {\n            case \"http\": {\n                Config.set(\"clientUrlParams.port\", 80);\n                break;\n            }\n            case \"https\": {\n                Config.set(\"clientUrlParams.port\", 443);\n                break;\n            }\n        }\n    }\n\n    let host = config.clientUrlParams.host;\n\n    // build url\n    if (typeof host == \"string\" && host.endsWith(\"/\")) {\n        host = host.slice(0, -1);\n        Config.set(\"clientUrlParams.host\", host);\n    }\n\n    const url = `${clientUrlParams.protocol}://${config.clientUrlParams.host}:${clientUrlParams.port}`;\n\n    Config.set(\"clientUrlParams.url\", url);\n};\n\n// TODO: add documentation mentioning that you cannot pass stack sdk in the init data\n\nexport const handleInitData = (initData: Partial<IInitData>): void => {\n    const config = Config.get();\n    const stackSdk = initData.stackSdk || config.stackSdk;\n\n    Config.set(\n        \"enable\",\n        initData.enable ?? stackSdk.live_preview?.enable ?? config.enable\n    );\n\n    Config.set(\n        \"ssr\",\n        stackSdk.live_preview?.ssr ??\n            initData.ssr ??\n            (typeof initData.stackSdk === \"object\" ? false : true) ??\n            true\n    );\n\n    Config.set(\n        \"runScriptsOnUpdate\",\n        initData.runScriptsOnUpdate ??\n            stackSdk.live_preview?.runScriptsOnUpdate ??\n            config.runScriptsOnUpdate\n    );\n\n    Config.set(\"stackSdk\", initData.stackSdk ?? config.stackSdk);\n\n    Config.set(\n        \"cleanCslpOnProduction\",\n        initData.cleanCslpOnProduction ??\n            stackSdk.live_preview?.cleanCslpOnProduction ??\n            config.cleanCslpOnProduction\n    );\n\n    Config.set(\"editButton\", {\n        enable:\n            initData.editButton?.enable ??\n            stackSdk.live_preview?.editButton?.enable ??\n            config.editButton.enable,\n        // added extra check if exclude data passed by user is array or not\n        exclude:\n            Array.isArray(initData.editButton?.exclude) &&\n            initData.editButton?.exclude\n                ? initData.editButton?.exclude\n                : Array.isArray(stackSdk.live_preview?.exclude) &&\n                    stackSdk.live_preview?.exclude\n                  ? stackSdk.live_preview?.exclude\n                  : (config.editButton.exclude ?? []),\n        position:\n            initData.editButton?.position ??\n            stackSdk.live_preview?.position ??\n            config.editButton.position ??\n            \"top\",\n\n        includeByQueryParameter:\n            initData.editButton?.includeByQueryParameter ??\n            stackSdk.live_preview?.includeByQueryParameter ??\n            config.editButton.includeByQueryParameter ??\n            true,\n    });\n    \n    Config.set(\"editInVisualBuilderButton\", {\n        enable:\n            initData.editInVisualBuilderButton?.enable ??\n            stackSdk.live_preview?.editInVisualBuilderButton?.enable ??\n            config.editInVisualBuilderButton.enable,\n        position:  \n            initData.editInVisualBuilderButton?.position ??\n            stackSdk.live_preview?.position ??\n            config.editInVisualBuilderButton.position ??\n            \"bottom-right\",\n    })\n\n    // client URL params\n    handleClientUrlParams(\n        initData.clientUrlParams ??\n            stackSdk.live_preview?.clientUrlParams ??\n            config.clientUrlParams\n    );\n\n    if (initData.mode) {\n        switch (initData.mode) {\n            case \"preview\": {\n                Config.set(\"mode\", ILivePreviewModeConfig.PREVIEW);\n                break;\n            }\n            case \"builder\": {\n                Config.set(\"mode\", ILivePreviewModeConfig.BUILDER);\n                break;\n            }\n            default: {\n                throw new TypeError(\n                    \"Live Preview SDK: The mode must be either 'builder' or 'preview'\"\n                );\n            }\n        }\n    }\n\n    Config.set(\n        \"debug\",\n        initData.debug ?? stackSdk.live_preview?.debug ?? config.debug\n    );\n\n    handleStackDetails(initData, stackSdk as IStackSdk);\n};\n\nfunction handleStackDetails(\n    initData: Partial<IInitData>,\n    stackSdk: Partial<IStackSdk>\n): void {\n    const config = Config.get();\n\n    Config.set(\n        \"stackDetails.apiKey\",\n        initData.stackDetails?.apiKey ?? config.stackDetails.apiKey\n    );\n\n    Config.set(\n        \"stackDetails.environment\",\n        initData.stackDetails?.environment ??\n            stackSdk.environment ??\n            config.stackDetails.environment\n    );\n\n    Config.set(\n        \"stackDetails.branch\",\n        initData.stackDetails?.branch ??\n            stackSdk.branch ??\n            stackSdk.headers?.branch ??\n            config.stackDetails.branch\n    );\n\n    Config.set(\n        \"stackDetails.locale\",\n        initData.stackDetails?.locale ?? config.stackDetails.locale\n    );\n\n    if (config.mode >= ILivePreviewModeConfig.BUILDER) {\n        if (!config.stackDetails.environment) {\n            throw Error(\"Live preview SDK: environment is required\");\n        }\n\n        if (!config.stackDetails.apiKey) {\n            throw Error(\"Live preview SDK: api key is required\");\n        }\n    }\n}\n\nexport const handleUserConfig = {\n    clientUrlParams: handleClientUrlParams,\n};\n"],"mappings":"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","names":[]}