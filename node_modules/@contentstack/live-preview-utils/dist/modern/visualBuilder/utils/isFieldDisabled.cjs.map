{"version":3,"sources":["../../../../src/visualBuilder/utils/isFieldDisabled.ts"],"sourcesContent":["import { VisualBuilderCslpEventDetails } from \"../types/visualBuilder.types\";\nimport Config from \"../../configManager/configManager\";\nimport { ISchemaFieldMap } from \"./types/index.types\";\nimport { VisualBuilder } from \"..\";\nimport { FieldDetails } from \"../components/FieldToolbar\";\n\nenum DisableReason {\n    ReadOnly = \"You have only read access to this field\",\n    LocalizedEntry = \"Editing this field is restricted in localized entries\",\n    UnlinkedVariant = \"This field is not editable as it is not linked to the selected variant\",\n    AudienceMode = \"Open an Experience from Audience widget to start editing\",\n    DisabledVariant = \"This field is not editable as it doesn't match the selected variant\",\n    UnlocalizedVariant = \"This field is not editable as it is not localized\",\n    None = \"\",\n}\n\ninterface FieldDisableState {\n    isDisabled: boolean;\n    reason: DisableReason;\n}\n\nconst getDisableReason = (flags: Record<string, boolean>): DisableReason => {\n    if (flags.updateRestrictDueToRole) return DisableReason.ReadOnly;\n    if (flags.updateRestrictDueToNonLocalizableFields)\n        return DisableReason.LocalizedEntry;\n    if (flags.updateRestrictDueToUnlocalizedVariant)\n        return DisableReason.UnlocalizedVariant;\n    if (flags.updateRestrictDueToUnlinkVariant)\n        return DisableReason.UnlinkedVariant;\n    if (flags.updateRestrictDueToAudienceMode)\n        return DisableReason.AudienceMode;\n    if (flags.updateRestrictDueToDisabledVariant)\n        return DisableReason.DisabledVariant;\n    return DisableReason.None;\n};\n\nexport const isFieldDisabled = (\n    fieldSchemaMap: ISchemaFieldMap,\n    eventFieldDetails: FieldDetails\n): FieldDisableState => {\n    const { editableElement, fieldMetadata } = eventFieldDetails;\n    const masterLocale = Config.get().stackDetails.masterLocale || \"en-us\";\n    const { locale: cmsLocale, variant } =\n        VisualBuilder.VisualBuilderGlobalState.value;\n\n    const flags = {\n        updateRestrictDueToRole: Boolean(\n            fieldSchemaMap?.field_metadata?.updateRestrict\n        ),\n        updateRestrictDueToUnlinkVariant: Boolean(\n            fieldSchemaMap?.field_metadata?.isUnlinkedVariant\n        ),\n        updateRestrictDueToUnlocalizedVariant: Boolean(\n            variant && fieldMetadata.locale !== cmsLocale\n        ),\n        updateRestrictDueToNonLocalizableFields: Boolean(\n            fieldSchemaMap?.non_localizable &&\n                masterLocale !== fieldMetadata.locale\n        ),\n        updateRestrictDueToAudienceMode: false,\n        updateRestrictDueToDisabledVariant: false,\n    };\n\n    if (\n        VisualBuilder.VisualBuilderGlobalState.value.audienceMode &&\n        !editableElement.classList.contains(\"visual-builder__variant-field\") &&\n        !editableElement.classList.contains(\"visual-builder__base-field\")\n    ) {\n        if (\n            editableElement.classList.contains(\n                \"visual-builder__disabled-variant-field\"\n            )\n        ) {\n            flags.updateRestrictDueToDisabledVariant = true;\n        } else {\n            flags.updateRestrictDueToAudienceMode = true;\n        }\n    }\n\n    const isDisabled = Object.values(flags).some(Boolean);\n    const reason = getDisableReason(flags);\n\n    return { isDisabled, reason };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,2BAAmB;AAEnB,eAA8B;AAkB9B,IAAM,mBAAmB,CAAC,UAAkD;AACxE,MAAI,MAAM,wBAAyB,QAAO;AAC1C,MAAI,MAAM;AACN,WAAO;AACX,MAAI,MAAM;AACN,WAAO;AACX,MAAI,MAAM;AACN,WAAO;AACX,MAAI,MAAM;AACN,WAAO;AACX,MAAI,MAAM;AACN,WAAO;AACX,SAAO;AACX;AAEO,IAAM,kBAAkB,CAC3B,gBACA,sBACoB;AACpB,QAAM,EAAE,iBAAiB,cAAc,IAAI;AAC3C,QAAM,eAAe,qBAAAA,QAAO,IAAI,EAAE,aAAa,gBAAgB;AAC/D,QAAM,EAAE,QAAQ,WAAW,QAAQ,IAC/B,uBAAc,yBAAyB;AAE3C,QAAM,QAAQ;AAAA,IACV,yBAAyB;AAAA,MACrB,gBAAgB,gBAAgB;AAAA,IACpC;AAAA,IACA,kCAAkC;AAAA,MAC9B,gBAAgB,gBAAgB;AAAA,IACpC;AAAA,IACA,uCAAuC;AAAA,MACnC,WAAW,cAAc,WAAW;AAAA,IACxC;AAAA,IACA,yCAAyC;AAAA,MACrC,gBAAgB,mBACZ,iBAAiB,cAAc;AAAA,IACvC;AAAA,IACA,iCAAiC;AAAA,IACjC,oCAAoC;AAAA,EACxC;AAEA,MACI,uBAAc,yBAAyB,MAAM,gBAC7C,CAAC,gBAAgB,UAAU,SAAS,+BAA+B,KACnE,CAAC,gBAAgB,UAAU,SAAS,4BAA4B,GAClE;AACE,QACI,gBAAgB,UAAU;AAAA,MACtB;AAAA,IACJ,GACF;AACE,YAAM,qCAAqC;AAAA,IAC/C,OAAO;AACH,YAAM,kCAAkC;AAAA,IAC5C;AAAA,EACJ;AAEA,QAAM,aAAa,OAAO,OAAO,KAAK,EAAE,KAAK,OAAO;AACpD,QAAM,SAAS,iBAAiB,KAAK;AAErC,SAAO,EAAE,YAAY,OAAO;AAChC;","names":["Config"]}