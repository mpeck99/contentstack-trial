{"version":3,"sources":["../../../src/types/types.ts"],"sourcesContent":["export declare interface IEditEntrySearchParams {\n    hash?: string;\n    entry_uid?: string;\n    content_type_uid?: string;\n    /**\n     * @deprecated pass this value as hash instead\n     */\n    live_preview?: string;\n}\n\nexport declare interface IClientUrlParams {\n    protocol: \"http\" | \"https\";\n    host: string;\n    port: string | number;\n    url: string;\n}\n\nexport declare interface IStackSdk {\n    live_preview: { [key: string]: any } & Partial<IConfig>;\n    [key: string]: any;\n    environment: string;\n}\n\nexport declare interface IStackDetails {\n    apiKey: string;\n    environment: string;\n    contentTypeUid: string;\n    entryUid: string;\n    branch: string;\n    /**\n     * This locale is currently used by the visual builder to\n     * redirect to the correct locale if the no data-cslp tag\n     * is present in the HTML to extract the locale.\n     */\n    locale: string;\n    masterLocale: string;\n}\n\nexport declare interface IInitStackDetails {\n    apiKey: string;\n    environment: string;\n    branch: string;\n    /**\n     * This locale is currently used by the visual builder to\n     * redirect to the correct locale if the no data-cslp tag\n     * is present in the HTML to extract the locale.\n     */\n    locale: string;\n}\n\nexport declare type ILivePreviewMode = \"builder\" | \"preview\";\n\n//? We kept it as number so that we could disable only the unrequired features,\n//? since the \"Builder\" mode will contain all the features of the \"Preview\" mode.\nexport enum ILivePreviewModeConfig {\n    PREVIEW = 1,\n    BUILDER = 2,\n}\n\nexport enum ILivePreviewWindowType {\n    PREVIEW = \"preview\",\n    BUILDER = \"builder\",\n    INDEPENDENT = \"independent\",\n}\n\nexport declare interface IConfig {\n    ssr: boolean;\n    enable: boolean;\n    /**\n     * @default false\n     */\n    debug: boolean;\n    cleanCslpOnProduction: boolean;\n    stackDetails: IStackDetails;\n    clientUrlParams: IClientUrlParams;\n    stackSdk: IStackSdk;\n    onChange: () => void;\n    runScriptsOnUpdate: boolean;\n    windowType: ILivePreviewWindowType;\n    hash: string;\n    editButton: IConfigEditButton;\n    editInVisualBuilderButton: IConfigEditInVisualBuilderButton;\n    mode: ILivePreviewModeConfig;\n    elements: {\n        highlightedElement: HTMLElement | null;\n    };\n}\n\n\nexport declare interface IConfigEditInVisualBuilderButton {\n    enable: boolean;\n    position?:\n        | \"top-left\"\n        | \"top-right\"\n        | \"bottom-left\"\n        | \"bottom-right\"\n}\n\n\nexport declare interface IConfigEditButton {\n    enable: boolean;\n    exclude?: (\"insideLivePreviewPortal\" | \"outsideLivePreviewPortal\")[];\n    includeByQueryParameter?: boolean;\n    position?:\n        | \"top\"\n        | \"bottom\"\n        | \"left\"\n        | \"right\"\n        | \"top-left\"\n        | \"top-right\"\n        | \"top-center\"\n        | \"bottom-left\"\n        | \"bottom-right\"\n        | \"bottom-center\";\n}\n\nexport declare interface IInitData {\n    ssr: boolean;\n    runScriptsOnUpdate: boolean;\n    enable: boolean;\n    /**\n     * @default false\n     */\n    debug: boolean;\n    cleanCslpOnProduction: boolean;\n    stackDetails: Partial<IInitStackDetails>;\n    clientUrlParams: Partial<Omit<IClientUrlParams, \"url\">>;\n    stackSdk: IStackSdk;\n    editButton: IConfigEditButton;\n    editInVisualBuilderButton: IConfigEditInVisualBuilderButton;\n    mode: ILivePreviewMode;\n}\n\n// type PickPartial<T, K extends keyof T> = Partial<Pick<T, K>> & Omit<T, K>;\n\n// export type IInitData =\n//     | {\n//           ssr?: true;\n//           stackSdk?: IStackSdk;\n//           runScriptsOnUpdate?: boolean;\n//           enable?: boolean;\n//           cleanCslpOnProduction?: boolean;\n//           stackDetails?: Partial<IInitStackDetails>;\n//           clientUrlParams?: Partial<Omit<IClientUrlParams, \"url\">>;\n//           editButton?: IConfigEditButton;\n//           mode?: \"preview\";\n//       }\n//     | {\n//           ssr?: true;\n//           stackSdk?: IStackSdk;\n//           runScriptsOnUpdate?: boolean;\n//           enable?: boolean;\n//           cleanCslpOnProduction?: boolean;\n//           stackDetails: PickPartial<IInitStackDetails, \"branch\">;\n//           clientUrlParams: PickPartial<\n//               Omit<IClientUrlParams, \"url\">,\n//               \"port\" | \"protocol\"\n//           >;\n//           editButton?: IConfigEditButton;\n//           mode: \"builder\";\n//       }\n//     | {\n//           ssr: false;\n//           runScriptsOnUpdate?: boolean;\n//           enable?: boolean;\n//           cleanCslpOnProduction?: boolean;\n//           stackDetails?: Partial<IInitStackDetails>;\n//           clientUrlParams?: Partial<Omit<IClientUrlParams, \"url\">>;\n//           stackSdk: IStackSdk;\n//           editButton?: IConfigEditButton;\n//           mode?: \"preview\";\n//       }\n//     | {\n//           ssr: false;\n//           runScriptsOnUpdate?: boolean;\n//           enable?: boolean;\n//           cleanCslpOnProduction?: boolean;\n//           stackDetails: PickPartial<IInitStackDetails, \"branch\">;\n//           clientUrlParams: PickPartial<\n//               Omit<IClientUrlParams, \"url\">,\n//               \"port\" | \"protocol\"\n//           >;\n//           stackSdk: IStackSdk;\n//           editButton?: IConfigEditButton;\n//           mode: \"builder\";\n//       };\n\n// Post message types\n\nexport declare interface ILivePreviewMessageCommon {\n    from: \"live-preview\";\n}\n\nexport declare interface IEditButtonPosition {\n    upperBoundOfTooltip: number;\n    leftBoundOfTooltip: number;\n}\n\n// end of Post message types\n\nexport interface IVisualBuilderInitEvent {\n    windowType: ILivePreviewWindowType;\n    stackDetails: {\n        masterLocale: string;\n    };\n}\n\nexport type IExportedConfig = Pick<\n    IConfig,\n    | \"ssr\"\n    | \"enable\"\n    | \"cleanCslpOnProduction\"\n    | \"stackDetails\"\n    | \"clientUrlParams\"\n    | \"windowType\"\n    | \"hash\"\n    | \"editButton\"\n    | \"mode\"\n>;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDO,IAAK,yBAAL,kBAAKA,4BAAL;AACH,EAAAA,gDAAA,aAAU,KAAV;AACA,EAAAA,gDAAA,aAAU,KAAV;AAFQ,SAAAA;AAAA,GAAA;AAKL,IAAK,yBAAL,kBAAKC,4BAAL;AACH,EAAAA,wBAAA,aAAU;AACV,EAAAA,wBAAA,aAAU;AACV,EAAAA,wBAAA,iBAAc;AAHN,SAAAA;AAAA,GAAA;","names":["ILivePreviewModeConfig","ILivePreviewWindowType"]}