{"version":3,"sources":["../../../src/livePreview/live-preview.ts"],"sourcesContent":["import Config from \"../configManager/configManager\";\nimport { PublicLogger } from \"../logger/logger\";\nimport { ILivePreviewModeConfig } from \"../types/types\";\nimport { addLivePreviewQueryTags, isOpeningInTimeline } from \"../utils\";\nimport { LivePreviewEditButton } from \"./editButton/editButton\";\nimport { sendInitializeLivePreviewPostMessageEvent } from \"./eventManager/postMessageEvent.hooks\";\nimport { removeDataCslp } from \"./livePreviewProductionCleanup\";\nimport { removeFromOnChangeSubscribers } from \"./removeFromOnChangeSubscribers\";\nimport {\n    OnEntryChangeCallback,\n    OnEntryChangeCallbackSubscribers,\n    OnEntryChangeCallbackUID,\n    OnEntryChangeUnsubscribeParameters,\n} from \"./types/onEntryChangeCallback.type\";\n\nexport default class LivePreview {\n    /**\n     * @hideconstructor\n     */\n\n    private subscribers: OnEntryChangeCallbackSubscribers = {};\n\n    constructor() {\n        this.requestDataSync = this.requestDataSync.bind(this);\n        this.subscribeToOnEntryChange =\n            this.subscribeToOnEntryChange.bind(this);\n        this.publish = this.publish.bind(this);\n        this.unsubscribeOnEntryChange =\n            this.unsubscribeOnEntryChange.bind(this);\n\n        const config = Config.get();\n\n        if (config.debug) {\n            PublicLogger.debug(\n                \"Contentstack Live Preview Debugging mode: config --\",\n                Config.config\n            );\n        }\n\n        if (config.enable) {\n            if (\n                typeof document !== undefined &&\n                document.readyState === \"complete\"\n            ) {\n                this.requestDataSync();\n            } else {\n                window.addEventListener(\"load\", this.requestDataSync);\n            }\n\n            // TODO: capetown: add test cases for this condition.\n            // TODO: mjrf: Check if we need the second condition here.\n            // We are already handling the functions separately in the visual builder.\n            // render the hover outline only when edit button enable\n\n            if (\n                !isOpeningInTimeline() && \n                (config.editButton.enable ||\n                config.mode >= ILivePreviewModeConfig.BUILDER)\n            ) {\n                LivePreviewEditButton.livePreviewEditButton =\n                    new LivePreviewEditButton();\n            }\n\n        } else if (config.cleanCslpOnProduction) {\n            removeDataCslp();\n        }\n    }\n\n    // Request parent for data sync when document loads\n    private requestDataSync() {\n        const config = Config.get();\n\n        Config.set(\"onChange\", this.publish);\n\n        //! TODO: we replaced the handleOnChange() with this.\n        //! I don't think we need this. Confirm and remove it.\n        config.onChange();\n\n        sendInitializeLivePreviewPostMessageEvent();\n    }\n\n    subscribeToOnEntryChange(\n        callback: OnEntryChangeCallback,\n        callbackUid: OnEntryChangeCallbackUID\n    ): string {\n        this.subscribers[callbackUid] = callback;\n        return callbackUid;\n    }\n\n    private publish(): void {\n        Object.values<OnEntryChangeCallback>(this.subscribers).forEach(\n            (func) => {\n                func();\n            }\n        );\n    }\n\n    unsubscribeOnEntryChange(\n        callback: OnEntryChangeUnsubscribeParameters\n    ): void {\n        removeFromOnChangeSubscribers(this.subscribers, callback);\n    }\n}\n"],"mappings":";;;AAAA,OAAO,YAAY;AACnB,SAAS,oBAAoB;AAC7B,SAAS,8BAA8B;AACvC,SAAkC,2BAA2B;AAC7D,SAAS,6BAA6B;AACtC,SAAS,iDAAiD;AAC1D,SAAS,sBAAsB;AAC/B,SAAS,qCAAqC;AAQ9C,IAAqB,cAArB,MAAiC;AAAA,EAO7B,cAAc;AAFd;AAAA;AAAA;AAAA,SAAQ,cAAgD,CAAC;AAGrD,SAAK,kBAAkB,KAAK,gBAAgB,KAAK,IAAI;AACrD,SAAK,2BACD,KAAK,yBAAyB,KAAK,IAAI;AAC3C,SAAK,UAAU,KAAK,QAAQ,KAAK,IAAI;AACrC,SAAK,2BACD,KAAK,yBAAyB,KAAK,IAAI;AAE3C,UAAM,SAAS,OAAO,IAAI;AAE1B,QAAI,OAAO,OAAO;AACd,mBAAa;AAAA,QACT;AAAA,QACA,OAAO;AAAA,MACX;AAAA,IACJ;AAEA,QAAI,OAAO,QAAQ;AACf,UACI,OAAO,aAAa,UACpB,SAAS,eAAe,YAC1B;AACE,aAAK,gBAAgB;AAAA,MACzB,OAAO;AACH,eAAO,iBAAiB,QAAQ,KAAK,eAAe;AAAA,MACxD;AAOA,UACI,CAAC,oBAAoB,MACpB,OAAO,WAAW,UACnB,OAAO,QAAQ,uBAAuB,UACxC;AACE,8BAAsB,wBAClB,IAAI,sBAAsB;AAAA,MAClC;AAAA,IAEJ,WAAW,OAAO,uBAAuB;AACrC,qBAAe;AAAA,IACnB;AAAA,EACJ;AAAA;AAAA,EAGQ,kBAAkB;AACtB,UAAM,SAAS,OAAO,IAAI;AAE1B,WAAO,IAAI,YAAY,KAAK,OAAO;AAInC,WAAO,SAAS;AAEhB,8CAA0C;AAAA,EAC9C;AAAA,EAEA,yBACI,UACA,aACM;AACN,SAAK,YAAY,WAAW,IAAI;AAChC,WAAO;AAAA,EACX;AAAA,EAEQ,UAAgB;AACpB,WAAO,OAA8B,KAAK,WAAW,EAAE;AAAA,MACnD,CAAC,SAAS;AACN,aAAK;AAAA,MACT;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,yBACI,UACI;AACJ,kCAA8B,KAAK,aAAa,QAAQ;AAAA,EAC5D;AACJ;","names":[]}