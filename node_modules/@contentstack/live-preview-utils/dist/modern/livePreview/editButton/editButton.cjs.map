{"version":3,"sources":["../../../../src/livePreview/editButton/editButton.ts"],"sourcesContent":["import { effect } from \"@preact/signals\";\nimport { inIframe } from \"../../common/inIframe\";\nimport Config from \"../../configManager/configManager\";\nimport { addCslpOutline, extractDetailsFromCslp } from \"../../cslp\";\nimport { cslpTagStyles } from \"./editButton.style\";\nimport { PublicLogger } from \"../../logger/logger\";\nimport {\n    type IEditButtonPosition,\n    ILivePreviewWindowType,\n} from \"../../types/types\";\nimport livePreviewPostMessage from \"../eventManager/livePreviewEventManager\";\nimport { EDIT_BUTTON_TOOLTIP_ID } from \"./editButton.constant\";\nimport { isOpeningInTimeline } from \"../../utils\";\n\nfunction calculateEditButtonPosition(\n    currentHoveredElement: HTMLElement,\n    cslpButtonPosition: string\n): IEditButtonPosition {\n    const editButtonPosition: IEditButtonPosition = {\n        upperBoundOfTooltip: 0,\n        leftBoundOfTooltip: 0,\n    };\n    const currentRectOfElement = currentHoveredElement.getBoundingClientRect();\n    try {\n        const buttonMeasurementValues = {\n            width: 72,\n            halfWidth: 36,\n            height: 40,\n            basicMargin: 5,\n            widthWithMargin: 77,\n        };\n\n        switch (cslpButtonPosition) {\n            case \"top-center\":\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.top - buttonMeasurementValues.height;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.width / 2 -\n                    buttonMeasurementValues.halfWidth +\n                    currentRectOfElement.left;\n                break;\n            case \"top-right\":\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.top - buttonMeasurementValues.height;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.right - buttonMeasurementValues.width;\n                break;\n            case \"right\":\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.top -\n                    buttonMeasurementValues.basicMargin;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.right +\n                    buttonMeasurementValues.basicMargin;\n                break;\n            case \"bottom\":\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.bottom +\n                    buttonMeasurementValues.basicMargin;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.left -\n                    buttonMeasurementValues.basicMargin;\n                break;\n            case \"bottom-left\":\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.bottom +\n                    buttonMeasurementValues.basicMargin;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.left -\n                    buttonMeasurementValues.basicMargin;\n                break;\n            case \"bottom-center\":\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.bottom +\n                    buttonMeasurementValues.basicMargin;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.width / 2 -\n                    buttonMeasurementValues.halfWidth +\n                    currentRectOfElement.left;\n                break;\n            case \"bottom-right\":\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.bottom +\n                    buttonMeasurementValues.basicMargin;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.right - buttonMeasurementValues.width;\n                break;\n            case \"left\":\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.top -\n                    buttonMeasurementValues.basicMargin;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.left -\n                    buttonMeasurementValues.widthWithMargin;\n                break;\n            // default position => top, top-left or any other string\n            default:\n                editButtonPosition.upperBoundOfTooltip =\n                    currentRectOfElement.top - buttonMeasurementValues.height;\n                editButtonPosition.leftBoundOfTooltip =\n                    currentRectOfElement.left -\n                    buttonMeasurementValues.basicMargin;\n                break;\n        }\n        return editButtonPosition;\n    } catch (error) {\n        PublicLogger.error(error);\n        return editButtonPosition;\n    }\n}\n\nexport const createSingularEditButton = (\n    editCallback: (e: MouseEvent) => void\n): HTMLDivElement => {\n    const singularEditButton = document.createElement(\"div\");\n    singularEditButton.classList.add(\"cslp-tooltip-child\", \"singular\");\n    singularEditButton.setAttribute(\n        \"data-test-id\",\n        \"cslp-singular-edit-button\"\n    );\n    singularEditButton.innerHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\n    </svg>Edit`;\n\n    singularEditButton.addEventListener(\"click\", editCallback);\n\n    return singularEditButton;\n};\n\nexport const createMultipleEditButton = (\n    editCallback: (e: MouseEvent) => void,\n    linkCallback: (e: MouseEvent) => void\n): HTMLDivElement => {\n    const multipleEditButton = document.createElement(\"div\");\n    multipleEditButton.classList.add(\"cslp-tooltip-child\");\n    multipleEditButton.setAttribute(\"data-title\", \"Edit\");\n    multipleEditButton.setAttribute(\n        \"data-test-id\",\n        \"cslp-multiple-edit-button\"\n    );\n    multipleEditButton.innerHTML = ` <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\n    </svg>`;\n\n    multipleEditButton.addEventListener(\"click\", editCallback);\n\n    const multipleExternalLinkButton = document.createElement(\"div\");\n    multipleExternalLinkButton.classList.add(\"cslp-tooltip-child\");\n    multipleExternalLinkButton.setAttribute(\"data-title\", \"Go to link\");\n    multipleExternalLinkButton.setAttribute(\n        \"data-test-id\",\n        \"cslp-multiple-external-link-button\"\n    );\n    multipleExternalLinkButton.innerHTML = ` <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M2.66654 2.66758H13.3332V13.3342H6.66654V16.0009H13.3332C14.0405 16.0009 14.7187 15.72 15.2188 15.2199C15.7189 14.7198 15.9999 14.0415 15.9999 13.3342V2.66758C15.9999 1.96034 15.7189 1.28206 15.2188 0.781964C14.7187 0.281867 14.0405 0.000915527 13.3332 0.000915527H2.66654C1.9593 0.000915527 1.28102 0.281867 0.780927 0.781964C0.280829 1.28206 -0.00012207 1.96034 -0.00012207 2.66758V9.33425H2.66654V2.66758Z\" fill=\"#718096\" />\n      <path d=\"M6.94263 7.05734L0.999958 13L2.88529 14.8853L8.82796 8.94267L10.8853 11V5.00001H4.88529L6.94263 7.05734Z\" fill=\"#718096\" />\n    </svg>`;\n\n    multipleExternalLinkButton.addEventListener(\"click\", linkCallback);\n\n    const multipleEditFragment = document.createDocumentFragment();\n    multipleEditFragment.appendChild(multipleEditButton);\n    multipleEditFragment.appendChild(multipleExternalLinkButton);\n\n    const multipleDiv = document.createElement(\"div\");\n    multipleDiv.appendChild(multipleEditFragment);\n    multipleDiv.classList.add(cslpTagStyles()[\"multiple\"]);\n\n    return multipleDiv;\n};\n\nexport function getEditButtonPosition(\n    currentHoveredElement: HTMLElement | null,\n    defaultPosition: string | undefined\n): IEditButtonPosition {\n    if (!currentHoveredElement)\n        return { upperBoundOfTooltip: 0, leftBoundOfTooltip: 0 };\n\n    const cslpButtonPosition = currentHoveredElement.getAttribute(\n        \"data-cslp-button-position\"\n    );\n    if (cslpButtonPosition) {\n        return calculateEditButtonPosition(\n            currentHoveredElement,\n            cslpButtonPosition\n        );\n    }\n\n    // NOTE: position \"top\" and \"top-left\" will be the position of edit button if no default position passed in config\n    return calculateEditButtonPosition(\n        currentHoveredElement,\n        defaultPosition || \"top\"\n    );\n}\n\nexport function shouldRenderEditButton(): boolean {\n    const config = Config.get();\n\n    if (!config.editButton.enable) {\n        if (config.editButton.enable === undefined)\n            PublicLogger.error(\n                \"enable key is required inside editButton object\"\n            );\n        return false;\n    }\n\n    // return boolean in case of cslp-buttons query added in url\n    try {\n        const currentLocation = new URL(window.location.href);\n        const cslpButtonQueryValue =\n            currentLocation.searchParams.get(\"cslp-buttons\");\n\n        if (\n            cslpButtonQueryValue !== null &&\n            config.editButton.includeByQueryParameter !== false\n        )\n            return cslpButtonQueryValue === \"false\" ? false : true;\n    } catch (error) {\n        PublicLogger.error(error);\n    }\n\n    const iFrameCheck = inIframe();\n\n    // case outside live preview\n    if (\n        !iFrameCheck &&\n        config.editButton.exclude?.find(\n            (exclude) => exclude === \"outsideLivePreviewPortal\"\n        )\n    ) {\n        return false;\n    }\n\n    // case if inside live preview\n    if (\n        iFrameCheck &&\n        config.editButton.exclude?.find(\n            (exclude) => exclude === \"insideLivePreviewPortal\"\n        )\n    ) {\n        return false;\n    } else if (iFrameCheck) {\n        // case if inside visual builder\n        if (config.windowType === \"builder\") {\n            return false;\n        }\n\n        // case if independent site\n        return true;\n    }\n\n    // Priority list => 1. cslpEditButton query value 2.  Inside live preview  3. renderCslpButtonByDefault value selected by user\n    return true;\n}\n\nexport function toggleEditButtonElement() {\n    const render = shouldRenderEditButton();\n    const exists = doesEditButtonExist();\n\n    if (render && !exists) {\n        LivePreviewEditButton.livePreviewEditButton =\n            new LivePreviewEditButton();\n    } else if (!render && exists) {\n        LivePreviewEditButton.livePreviewEditButton?.destroy();\n    }\n}\n\nexport function doesEditButtonExist() {\n    return document.getElementById(EDIT_BUTTON_TOOLTIP_ID) !== null;\n}\n\nexport class LivePreviewEditButton {\n    private tooltip: HTMLButtonElement | null = null;\n    private typeOfCurrentChild: \"singular\" | \"multiple\" = \"singular\";\n    private tooltipChild: {\n        singular: HTMLDivElement | null;\n        multiple: HTMLDivElement | null;\n    } = {\n        singular: null,\n        multiple: null,\n    };\n    static livePreviewEditButton: LivePreviewEditButton | null = null;\n\n    constructor() {\n        this.createCslpTooltip = this.createCslpTooltip.bind(this);\n        this.updateTooltipPosition = this.updateTooltipPosition.bind(this);\n        this.addEditStyleOnHover = this.addEditStyleOnHover.bind(this);\n        this.scrollHandler = this.scrollHandler.bind(this);\n        this.generateRedirectUrl = this.generateRedirectUrl.bind(this);\n        this.linkClickHandler = this.linkClickHandler.bind(this);\n        this.destroy = this.destroy.bind(this);\n\n        if (this.createCslpTooltip()) {\n            this.updateTooltipPosition();\n\n            window.addEventListener(\"scroll\", this.updateTooltipPosition);\n            window.addEventListener(\"mouseover\", this.addEditStyleOnHover);\n        }\n    }\n\n    private createCslpTooltip(): boolean {\n        const editButton = Config.get().editButton;\n\n        if (\n            !document.getElementById(EDIT_BUTTON_TOOLTIP_ID) &&\n            editButton.enable &&\n            shouldRenderEditButton()\n        ) {\n            const tooltip = document.createElement(\"button\");\n            this.tooltip = tooltip;\n\n            this.tooltip.classList.add(cslpTagStyles()[\"cslp-tooltip\"]);\n            this.tooltip.setAttribute(\"data-test-id\", \"cs-cslp-tooltip\");\n            this.tooltip.id = EDIT_BUTTON_TOOLTIP_ID;\n\n            window.document.body.insertAdjacentElement(\n                \"beforeend\",\n                this.tooltip\n            );\n\n            this.tooltipChild.singular = createSingularEditButton(\n                this.scrollHandler\n            );\n            this.tooltipChild.multiple = createMultipleEditButton(\n                this.scrollHandler,\n                this.linkClickHandler\n            );\n\n            this.tooltip.appendChild(this.tooltipChild.singular);\n            return true;\n        }\n        return false;\n    }\n\n    private updateTooltipPosition() {\n        if (!document.getElementById(\"cslp-tooltip\")) {\n            this.createCslpTooltip();\n        }\n        const editButton = Config.get().editButton;\n        const elements = Config.get().elements;\n\n        if (!elements.highlightedElement || !this.tooltip) return false;\n\n        const currentRectOfElement =\n            elements.highlightedElement.getBoundingClientRect();\n        const currentRectOfParentOfElement =\n            this.tooltip.parentElement?.getBoundingClientRect();\n\n        if (currentRectOfElement && currentRectOfParentOfElement) {\n            const editButtonPosition = getEditButtonPosition(\n                elements.highlightedElement as HTMLElement,\n                editButton.position\n            );\n\n            let upperBoundOfTooltip = editButtonPosition.upperBoundOfTooltip;\n            const leftBoundOfTooltip = editButtonPosition.leftBoundOfTooltip;\n\n            // if scrolled and element is still visible, make sure tooltip is also visible\n            if (upperBoundOfTooltip < 0) {\n                if (currentRectOfElement.top < 0)\n                    upperBoundOfTooltip = currentRectOfElement.top;\n                else upperBoundOfTooltip = 0;\n            }\n\n            this.tooltip.style.top = upperBoundOfTooltip + \"px\";\n            this.tooltip.style.zIndex =\n                elements.highlightedElement.style.zIndex || \"200\";\n            this.tooltip.style.left = leftBoundOfTooltip + \"px\";\n\n            if (this.tooltipChild.singular && this.tooltipChild.multiple) {\n                if (\n                    elements.highlightedElement.hasAttribute(\"href\") &&\n                    this.typeOfCurrentChild !== \"multiple\"\n                ) {\n                    this.tooltip.innerHTML = \"\";\n                    this.tooltip.appendChild(this.tooltipChild.multiple);\n                    this.typeOfCurrentChild = \"multiple\";\n                } else if (this.typeOfCurrentChild !== \"singular\") {\n                    this.tooltip.innerHTML = \"\";\n                    this.tooltip.appendChild(this.tooltipChild.singular);\n                    this.typeOfCurrentChild = \"singular\";\n                }\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    private addEditStyleOnHover(e: MouseEvent) {\n        const updateStyles = this.shouldUpdateStyle(e);\n        // Checks whether the mouse pointer is within the safe zone of the\n        // element which was hovered on, since it also returns undefined when the\n        // above can't be determined we can still add styles\n        const shouldRedraw =\n            typeof updateStyles === \"undefined\" ? true : updateStyles;\n        if (!shouldRedraw) {\n            return;\n        }\n        const updateTooltipPosition: Parameters<typeof addCslpOutline>[\"1\"] = ({\n            cslpTag,\n            highlightedElement,\n        }) => {\n            if (this.updateTooltipPosition()) {\n                this.tooltip?.setAttribute(\"current-data-cslp\", cslpTag);\n                this.tooltip?.setAttribute(\n                    \"current-href\",\n                    highlightedElement.getAttribute(\"href\") ?? \"\"\n                );\n            }\n        };\n\n        const editButton = Config.get().editButton;\n        const windowType = Config.get().windowType;\n\n        if (\n            (windowType === ILivePreviewWindowType.PREVIEW ||\n                windowType === ILivePreviewWindowType.INDEPENDENT) &&\n            editButton.enable\n        ) {\n            addCslpOutline(e, updateTooltipPosition);\n        }\n    }\n\n    private shouldUpdateStyle(event: MouseEvent) {\n        const editButtonPos = Config.get().editButton.position;\n        const editButtonDomRect = this.tooltip?.getBoundingClientRect();\n        return isPointerWithinEditButtonSafeZone({\n            event,\n            editButtonPos,\n            editButtonDomRect,\n        });\n    }\n\n    private scrollHandler() {\n        if (!this.tooltip) return;\n\n        const cslpTag = this.tooltip.getAttribute(\"current-data-cslp\");\n\n        if (cslpTag) {\n            const {\n                content_type_uid,\n                entry_uid,\n                locale,\n                variant,\n                fieldPathWithIndex,\n            } = extractDetailsFromCslp(cslpTag);\n\n            if (inIframe()) {\n                livePreviewPostMessage?.send(\"scroll\", {\n                    field: fieldPathWithIndex,\n                    content_type_uid,\n                    entry_uid,\n                    variant,\n                    locale,\n                });\n            } else {\n                try {\n                    // Redirect to Contentstack edit page\n                    const redirectUrl = this.generateRedirectUrl(\n                        content_type_uid,\n                        locale,\n                        entry_uid,\n                        variant,\n                        fieldPathWithIndex\n                    );\n\n                    window.open(redirectUrl, \"_blank\");\n                } catch (error) {\n                    PublicLogger.error(error);\n                }\n            }\n        }\n    }\n\n    /**\n     * Generates the redirect URL for editing a specific entry in the Live Preview SDK.\n     * @param content_type_uid - The UID of the content type.\n     * @param locale - The locale of the entry (default: \"en-us\").\n     * @param entry_uid - The UID of the entry.\n     * @param preview_field - The field to be previewed.\n     * @returns The redirect URL for editing the entry.\n     */\n    private generateRedirectUrl(\n        content_type_uid: string,\n        locale = \"en-us\",\n        entry_uid: string,\n        variant: string | undefined,\n        preview_field: string\n    ): string {\n        const config = Config.get();\n\n        if (!config.stackDetails.apiKey) {\n            throw `To use edit tags, you must provide the stack API key. Specify the API key while initializing the Live Preview SDK.\n\n                ContentstackLivePreview.init({\n                    ...,\n                    stackDetails: {\n                        apiKey: 'your-api-key'\n                    },\n                    ...\n                })`;\n        }\n\n        if (!config.stackDetails.environment) {\n            throw `To use edit tags, you must provide the preview environment. Specify the preview environment while initializing the Live Preview SDK.\n\n                ContentstackLivePreview.init({\n                    ...,\n                    stackDetails: {\n                        environment: 'Your-environment'\n                    },\n                    ...\n                })`;\n        }\n\n        const protocol = String(config.clientUrlParams.protocol);\n        const host = String(config.clientUrlParams.host);\n        const port = String(config.clientUrlParams.port);\n        const environment = String(config.stackDetails.environment);\n        const branch = String(config.stackDetails.branch || \"main\");\n\n        let urlHash = `!/stack/${\n            config.stackDetails.apiKey\n        }/content-type/${content_type_uid}/${\n            locale ?? \"en-us\"\n        }/entry/${entry_uid}`;\n\n        if (variant) {\n            urlHash += `/variant/${variant}/edit`;\n        } else {\n            urlHash += `/edit`;\n        }\n\n        const url = new URL(`${protocol}://${host}`);\n        url.port = port;\n        url.hash = urlHash;\n        if (config.stackDetails.branch) {\n            url.searchParams.append(\"branch\", branch);\n        }\n        url.searchParams.append(\"preview-field\", preview_field);\n        url.searchParams.append(\"preview-locale\", locale ?? \"en-us\");\n        url.searchParams.append(\"preview-environment\", environment);\n\n        return `${url.origin}/${url.hash}${url.search}`;\n    }\n\n    private linkClickHandler() {\n        if (!this.tooltip) return;\n        const hrefAttribute = this.tooltip.getAttribute(\"current-href\");\n\n        if (hrefAttribute) {\n            window.location.assign(hrefAttribute);\n        }\n    }\n\n    /**\n     * Destroys the edit button by removing event listeners and removing the tooltip.\n     */\n    destroy(): void {\n        window.removeEventListener(\"scroll\", this.updateTooltipPosition);\n        window.removeEventListener(\"mouseover\", this.addEditStyleOnHover);\n        this.tooltip?.remove();\n    }\n}\n\neffect(function handleWindowTypeChange() {\n    // we need to specify when to run this effect.\n    // here, we run it when the value of windowType changes\n    if (typeof window === \"undefined\") return;\n    Config.get().windowType;\n    if (LivePreviewEditButton && !isOpeningInTimeline()) {\n        toggleEditButtonElement();\n    }\n});\n\n/**\n * Find first element with cslp on the event composed path,\n * do safe zone calculation for the element based on its\n * width and height, and return true if mouse pointer is\n * within the safe zone. Returns undefined when this cannot\n * be determined.\n */\nexport function isPointerWithinEditButtonSafeZone({\n    event,\n    editButtonDomRect,\n    editButtonPos,\n}: {\n    event: MouseEvent;\n    editButtonDomRect: DOMRect | undefined;\n    editButtonPos: string | undefined;\n}) {\n    const SAFE_ZONE_RATIO = 0.1;\n    const MAX_SAFE_ZONE_DISTANCE = 30;\n    if (!editButtonDomRect || !editButtonPos) {\n        return undefined;\n    }\n    if (!(editButtonDomRect.x > 0) || !(editButtonDomRect.y > 0)) {\n        return undefined;\n    }\n    const isTop = editButtonPos.includes(\"top\");\n    const isLeft = editButtonPos.includes(\"left\");\n    const isBottom = editButtonPos.includes(\"bottom\");\n    const isVertical = isTop || isBottom;\n    const cslpElement = event.composedPath().find((target) => {\n        const element = target as HTMLElement;\n        if (element.nodeName === \"BODY\") {\n            return false;\n        }\n        if (typeof element?.hasAttribute !== \"function\") {\n            return false;\n        }\n        return element.hasAttribute(\"data-cslp\");\n    });\n    if (!cslpElement) {\n        return undefined;\n    }\n    const element = cslpElement as HTMLElement;\n    const elementRect = element.getBoundingClientRect();\n    let safeZoneDistance = isVertical\n        ? // if vertical positioning (\"top\"/\"bottom\")\n          // button is rendered along the width\n          elementRect.width * SAFE_ZONE_RATIO\n        : // button is rendered along the height\n          elementRect.height * SAFE_ZONE_RATIO;\n    safeZoneDistance =\n        safeZoneDistance > MAX_SAFE_ZONE_DISTANCE\n            ? MAX_SAFE_ZONE_DISTANCE\n            : safeZoneDistance;\n\n    const tooltipX2 = editButtonDomRect.x + editButtonDomRect.width;\n    const tooltipY2 = editButtonDomRect.y + editButtonDomRect.height;\n    const safeX1 = editButtonDomRect.x - safeZoneDistance;\n    const safeX2 = tooltipX2 + safeZoneDistance;\n    const safeY1 = editButtonDomRect.y - safeZoneDistance;\n    const safeY2 = tooltipY2 + safeZoneDistance;\n\n    if (isTop || isBottom) {\n        const verticalSafeDistance = isTop\n            ? Math.abs(tooltipY2 - event.clientY)\n            : Math.abs(editButtonDomRect.y - event.clientY);\n        const isInSafeZone =\n            event.clientX > safeX1 &&\n            event.clientX < safeX2 &&\n            verticalSafeDistance < safeZoneDistance;\n        if (isInSafeZone) {\n            return false;\n        }\n    } else {\n        const horizontalSafeDistance = isLeft\n            ? Math.abs(tooltipX2 - event.clientX)\n            : Math.abs(editButtonDomRect.x - event.clientX);\n\n        const isInSafeZone =\n            event.clientY > safeY1 &&\n            event.clientY < safeY2 &&\n            horizontalSafeDistance < safeZoneDistance;\n        if (isInSafeZone) {\n            return false;\n        }\n    }\n    return true;\n}\n"],"mappings":"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","names":["import_editButton","Config","livePreviewPostMessage","element"]}