{"version":3,"sources":["../../../src/configManager/configManager.ts"],"sourcesContent":["import { DeepSignal, deepSignal } from \"deepsignal\";\nimport type { IConfig, IInitData } from \"../types/types\";\nimport { getDefaultConfig, getUserInitData } from \"./config.default\";\nimport { handleInitData } from \"./handleUserConfig\";\nimport { has as lodashHas, set as lodashSet } from \"lodash-es\";\n\nclass Config {\n    static config: {\n        state: DeepSignal<IConfig>;\n    } = {\n        state: deepSignal(getDefaultConfig()),\n    };\n\n    static replace(userInput: Partial<IInitData> = getUserInitData()): void {\n        handleInitData(userInput);\n    }\n\n    static set(key: string, value: any): void {\n        if (!lodashHas(this.config.state, key)) {\n            throw new Error(`Invalid key: ${key}`);\n        }\n        lodashSet(this.config.state, key, value);\n    }\n\n    static get(): DeepSignal<IConfig> {\n        return this.config.state;\n    }\n\n    static reset(): void {\n        lodashSet(this.config, \"state\", getDefaultConfig());\n    }\n}\n\nexport default Config;\n\n/**\n * Updates the configuration from the URL parameters.\n * It will receive live_preview containing the hash, content_type_uid and entry_uid.\n */\n\nexport function updateConfigFromUrl(): void {\n    const searchParams = new URLSearchParams(window.location.search);\n    setConfigFromParams(searchParams.toString());\n}\n\n/**\n * Sets the live preview hash, content_type_uid and entry_uid\n * from the query param to config.\n *\n * @param params query param in an object form, query string.\n *\n * @example\n * ```js\n * setConfigFromParams({\n *      live_preview: \"hash\",\n *      content_type_uid: \"content_type_uid\",\n *      entry_uid: \"entry_uid\",\n * });\n * ```\n *\n * @example\n * ```js\n * setConfigFromParams(\"?live_preview=hash&content_type_uid=content_type_uid&entry_uid=entry_uid\");\n * ```\n * Basically anything that can be passed to `URLSearchParams` constructor.\n */\n\nexport function setConfigFromParams(\n    params: ConstructorParameters<typeof URLSearchParams>[0] = {}\n): void {\n    const urlParams = new URLSearchParams(params);\n    const live_preview = urlParams.get(\"live_preview\");\n    const content_type_uid = urlParams.get(\"content_type_uid\");\n    const entry_uid = urlParams.get(\"entry_uid\");\n\n    const stackSdkLivePreview = Config.get().stackSdk.live_preview;\n\n    if (live_preview) {\n        Config.set(\"hash\", live_preview);\n        stackSdkLivePreview.hash = live_preview;\n        stackSdkLivePreview.live_preview = live_preview;\n    }\n\n    if (content_type_uid) {\n        Config.set(\"stackDetails.contentTypeUid\", content_type_uid);\n        stackSdkLivePreview.content_type_uid = content_type_uid;\n    }\n\n    if (entry_uid) {\n        Config.set(\"stackDetails.entryUid\", entry_uid);\n        stackSdkLivePreview.entry_uid = entry_uid;\n    }\n\n    Config.set(\"stackSdk.live_preview\", stackSdkLivePreview);\n}\n"],"mappings":";;;AAAA,SAAqB,kBAAkB;AAEvC,SAAS,kBAAkB,uBAAuB;AAClD,SAAS,sBAAsB;AAC/B,SAAS,OAAO,WAAW,OAAO,iBAAiB;AAEnD,IAAM,SAAN,MAAa;AAAA,EAOT,OAAO,QAAQ,YAAgC,gBAAgB,GAAS;AACpE,mBAAe,SAAS;AAAA,EAC5B;AAAA,EAEA,OAAO,IAAI,KAAa,OAAkB;AACtC,QAAI,CAAC,UAAU,KAAK,OAAO,OAAO,GAAG,GAAG;AACpC,YAAM,IAAI,MAAM,gBAAgB,GAAG,EAAE;AAAA,IACzC;AACA,cAAU,KAAK,OAAO,OAAO,KAAK,KAAK;AAAA,EAC3C;AAAA,EAEA,OAAO,MAA2B;AAC9B,WAAO,KAAK,OAAO;AAAA,EACvB;AAAA,EAEA,OAAO,QAAc;AACjB,cAAU,KAAK,QAAQ,SAAS,iBAAiB,CAAC;AAAA,EACtD;AACJ;AAzBM,OACK,SAEH;AAAA,EACA,OAAO,WAAW,iBAAiB,CAAC;AACxC;AAsBJ,IAAO,wBAAQ;AAOR,SAAS,sBAA4B;AACxC,QAAM,eAAe,IAAI,gBAAgB,OAAO,SAAS,MAAM;AAC/D,sBAAoB,aAAa,SAAS,CAAC;AAC/C;AAwBO,SAAS,oBACZ,SAA2D,CAAC,GACxD;AACJ,QAAM,YAAY,IAAI,gBAAgB,MAAM;AAC5C,QAAM,eAAe,UAAU,IAAI,cAAc;AACjD,QAAM,mBAAmB,UAAU,IAAI,kBAAkB;AACzD,QAAM,YAAY,UAAU,IAAI,WAAW;AAE3C,QAAM,sBAAsB,OAAO,IAAI,EAAE,SAAS;AAElD,MAAI,cAAc;AACd,WAAO,IAAI,QAAQ,YAAY;AAC/B,wBAAoB,OAAO;AAC3B,wBAAoB,eAAe;AAAA,EACvC;AAEA,MAAI,kBAAkB;AAClB,WAAO,IAAI,+BAA+B,gBAAgB;AAC1D,wBAAoB,mBAAmB;AAAA,EAC3C;AAEA,MAAI,WAAW;AACX,WAAO,IAAI,yBAAyB,SAAS;AAC7C,wBAAoB,YAAY;AAAA,EACpC;AAEA,SAAO,IAAI,yBAAyB,mBAAmB;AAC3D;","names":[]}