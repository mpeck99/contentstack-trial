{"version":3,"sources":["../../../../src/visualBuilder/utils/getFieldType.ts"],"sourcesContent":["// @ts-nocheck\nimport { ISchemaFieldMap, FieldDataType } from \"./types/index.types\";\n\nexport function getFieldType(fieldSchema: ISchemaFieldMap): FieldDataType {\n    if (!fieldSchema) return;\n    if (Object.hasOwnProperty.call(fieldSchema, \"extension_uid\")) {\n        return FieldDataType.CUSTOM_FIELD;\n    }\n\n    switch (fieldSchema.data_type) {\n        case \"text\": {\n            if (fieldSchema.field_metadata?.multiline) {\n                return FieldDataType.MULTILINE;\n            } else if (fieldSchema.field_metadata?.allow_rich_text) {\n                return FieldDataType.HTML_RTE;\n            } else if (fieldSchema.field_metadata?.markdown) {\n                return FieldDataType.MARKDOWN_RTE;\n            } else if (fieldSchema.enum) {\n                return FieldDataType.SELECT;\n            } else if (\n                fieldSchema.uid === \"url\" &&\n                fieldSchema.field_metadata?._default\n            ) {\n                return FieldDataType.URL;\n            } else {\n                return FieldDataType.SINGLELINE;\n            }\n        }\n        case \"json\": {\n            if (fieldSchema.field_metadata?.allow_json_rte) {\n                return FieldDataType.JSON_RTE;\n            }\n            break;\n        }\n\n        case \"blocks\": {\n            return \"modular_block\";\n        }\n        case \"link\":\n        case \"isodate\":\n        case \"boolean\":\n        case \"block\":\n        case \"number\":\n        case \"reference\":\n        case \"group\":\n        case \"experience_container\":\n        case \"file\":\n        case \"taxonomy\":\n        case \"global_field\": {\n            return FieldDataType[fieldSchema.data_type.toUpperCase()];\n        }\n    }\n\n    return \"\";\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAA+C;AAExC,SAAS,aAAa,aAA6C;AAH1E;AAII,MAAI,CAAC,YAAa;AAClB,MAAI,OAAO,eAAe,KAAK,aAAa,eAAe,GAAG;AAC1D,WAAO,2BAAc;AAAA,EACzB;AAEA,UAAQ,YAAY,WAAW;AAAA,IAC3B,KAAK,QAAQ;AACT,WAAI,iBAAY,mBAAZ,mBAA4B,WAAW;AACvC,eAAO,2BAAc;AAAA,MACzB,YAAW,iBAAY,mBAAZ,mBAA4B,iBAAiB;AACpD,eAAO,2BAAc;AAAA,MACzB,YAAW,iBAAY,mBAAZ,mBAA4B,UAAU;AAC7C,eAAO,2BAAc;AAAA,MACzB,WAAW,YAAY,MAAM;AACzB,eAAO,2BAAc;AAAA,MACzB,WACI,YAAY,QAAQ,WACpB,iBAAY,mBAAZ,mBAA4B,WAC9B;AACE,eAAO,2BAAc;AAAA,MACzB,OAAO;AACH,eAAO,2BAAc;AAAA,MACzB;AAAA,IACJ;AAAA,IACA,KAAK,QAAQ;AACT,WAAI,iBAAY,mBAAZ,mBAA4B,gBAAgB;AAC5C,eAAO,2BAAc;AAAA,MACzB;AACA;AAAA,IACJ;AAAA,IAEA,KAAK,UAAU;AACX,aAAO;AAAA,IACX;AAAA,IACA,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,gBAAgB;AACjB,aAAO,2BAAc,YAAY,UAAU,YAAY,CAAC;AAAA,IAC5D;AAAA,EACJ;AAEA,SAAO;AACX;","names":[]}