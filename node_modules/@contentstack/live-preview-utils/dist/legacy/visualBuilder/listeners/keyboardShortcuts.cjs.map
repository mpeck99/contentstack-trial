{"version":3,"sources":["../../../../src/visualBuilder/listeners/keyboardShortcuts.ts"],"sourcesContent":["import { hideOverlay } from \"../generators/generateOverlay\";\nimport EventListenerHandlerParams from \"./types\";\n\ntype AddKeyboardShortcutsParams = Omit<\n    EventListenerHandlerParams,\n    \"event\" | \"eventDetails\" | \"customCursor\" | \"previousSelectedEditableDOM\"\n>;\n\n// NOTE - when we add complex keyboard shortcuts, we can look into libraries\n// like hotkeys, etc.\nexport function addKeyboardShortcuts({\n    overlayWrapper,\n    visualBuilderContainer,\n    focusedToolbar,\n    resizeObserver,\n}: AddKeyboardShortcutsParams): void {\n    document.addEventListener(\"keydown\", (e: Event) => {\n        const event = e as KeyboardEvent;\n        // un-focusses the focussed canvas item and removes the overlay\n        if (event.key === \"Escape\") {\n            // previously, this was achieved by clicking on overlayWrapper\n            hideOverlay({\n                visualBuilderOverlayWrapper: overlayWrapper,\n                visualBuilderContainer,\n                focusedToolbar: focusedToolbar,\n                resizeObserver: resizeObserver,\n            });\n        }\n    });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA4B;AAUrB,SAAS,qBAAqB;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,GAAqC;AACjC,WAAS,iBAAiB,WAAW,CAAC,MAAa;AAC/C,UAAM,QAAQ;AAEd,QAAI,MAAM,QAAQ,UAAU;AAExB,8CAAY;AAAA,QACR,6BAA6B;AAAA,QAC7B;AAAA,QACA;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AACL;","names":[]}