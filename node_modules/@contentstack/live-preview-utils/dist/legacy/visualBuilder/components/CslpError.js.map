{"version":3,"sources":["../../../../src/visualBuilder/components/CslpError.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport { visualBuilderStyles } from \"../visualBuilder.style\";\nimport { WarningOctagonIcon } from \"./icons\";\nimport { useEffect, useRef, useState } from \"preact/compat\";\n\ninterface CslpErrorProps {}\n\nexport function CslpError({}: CslpErrorProps) {\n    const errorRef = useRef<HTMLDivElement>(null);\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    useEffect(() => {\n        const errorElement = errorRef.current;\n\n        const showTooltip = () => {\n            setShowTooltip(true);\n        };\n\n        const hideTooltip = () => {\n            setShowTooltip(false);\n        };\n\n        if (errorElement) {\n            errorElement.addEventListener(\"mouseenter\", showTooltip);\n            errorElement.addEventListener(\"mouseleave\", hideTooltip);\n        }\n\n        return () => {\n            if (errorElement) {\n                errorElement.removeEventListener(\"mouseenter\", showTooltip);\n                errorElement.removeEventListener(\"mouseleave\", hideTooltip);\n            }\n        };\n    }, []);\n\n    return (\n        <div\n            className={classNames(\n                visualBuilderStyles()[\"visual-builder__focused-toolbar__error\"]\n            )}\n            ref={errorRef}\n        >\n            <WarningOctagonIcon />\n            <span\n                className={classNames(\n                    visualBuilderStyles()[\n                        \"visual-builder__focused-toolbar__error-text\"\n                    ]\n                )}\n            >\n                Error\n            </span>\n            {showTooltip ? (\n                <div\n                    className={classNames(\n                        visualBuilderStyles()[\n                            \"visual-builder__focused-toolbar__error-toolip\"\n                        ]\n                    )}\n                >\n                    <p>Invalid CSLP tag</p>\n                    <span>\n                    The CSLP is invalid or incorrectly generated.\n                    </span>\n                </div>\n            ) : null}\n        </div>\n    );\n}\n"],"mappings":";;;AAAA,OAAO,gBAAgB;AACvB,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,WAAW,QAAQ,gBAAgB;AAuChC,cAWI,YAXJ;AAnCL,SAAS,UAAU,CAAC,GAAmB;AAC1C,QAAM,WAAW,OAAuB,IAAI;AAC5C,QAAM,CAAC,aAAa,cAAc,IAAI,SAAS,KAAK;AAEpD,YAAU,MAAM;AACZ,UAAM,eAAe,SAAS;AAE9B,UAAMA,eAAc,MAAM;AACtB,qBAAe,IAAI;AAAA,IACvB;AAEA,UAAM,cAAc,MAAM;AACtB,qBAAe,KAAK;AAAA,IACxB;AAEA,QAAI,cAAc;AACd,mBAAa,iBAAiB,cAAcA,YAAW;AACvD,mBAAa,iBAAiB,cAAc,WAAW;AAAA,IAC3D;AAEA,WAAO,MAAM;AACT,UAAI,cAAc;AACd,qBAAa,oBAAoB,cAAcA,YAAW;AAC1D,qBAAa,oBAAoB,cAAc,WAAW;AAAA,MAC9D;AAAA,IACJ;AAAA,EACJ,GAAG,CAAC,CAAC;AAEL,SACI;AAAA,IAAC;AAAA;AAAA,MACG,WAAW;AAAA,QACP,oBAAoB,EAAE,wCAAwC;AAAA,MAClE;AAAA,MACA,KAAK;AAAA,MAEL;AAAA,4BAAC,sBAAmB;AAAA,QACpB;AAAA,UAAC;AAAA;AAAA,YACG,WAAW;AAAA,cACP,oBAAoB,EAChB,6CACJ;AAAA,YACJ;AAAA,YACH;AAAA;AAAA,QAED;AAAA,QACC,cACG;AAAA,UAAC;AAAA;AAAA,YACG,WAAW;AAAA,cACP,oBAAoB,EAChB,+CACJ;AAAA,YACJ;AAAA,YAEA;AAAA,kCAAC,OAAE,8BAAgB;AAAA,cACnB,oBAAC,UAAK,2DAEN;AAAA;AAAA;AAAA,QACJ,IACA;AAAA;AAAA;AAAA,EACR;AAER;","names":["showTooltip"]}